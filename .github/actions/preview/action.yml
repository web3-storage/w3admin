name: publish
description: 'Add to w3 and update dns'

inputs:
  path_to_add:
    description: 'Path to directory to publish'
    required: true
  web3_token:
    description: 'API Key for web3.storage'
    required: true
  dnslink_record:
    description: 'subdomain to publish DNSLink TXT record under e.g console'
    required: false
  dnslink_domain:
    description: 'domain to publish DNSLink TXT record under e.g web3.storage'
    required: false
  cf_pages_project:
    description: 'Pages project name to publish to'
    required: true
  cf_account_id:
    description: 'Account id for Cloudflare'
    required: true
  cf_token:
    description: 'API Key for Cloudflare'
    required: true

outputs:
  cid:
    description: 'The IPFS Content ID for the directory e.g. bafkreihc7sejzq4ab4kygfyjvs4ye7bxyzgfdpzt7caqkizqnzgf6zgogi'
    value: ${{ steps.ipfs.outputs.cid }}
  url:
    description: 'The IPFS gateway URL for the directory e.g https://w3s.link/ipfs/bafkreihc7sejzq4ab4kygfyjvs4ye7bxyzgfdpzt7caqkizqnzgf6zgogi'
    value: https://${{ steps.ipfs.outputs.cid }}.ipfs.w3s.link
  cloudflare_url:
    description: 'The Cloudflare URL for the directory e.g https://dweb.link/ipfs/bafkreihc7sejzq4ab4kygfyjvs4ye7bxyzgfdpzt7caqkizqnzgf6zgogi'
    value: ${{ steps.get_url.outputs.url }}
  summary:
    description: 'Text summary of the published urls'
    value: ${{ steps.set_summary.outputs.summary }}

runs:
  using: 'composite'
  steps:
    - name: Add to web3.storage
      uses: web3-storage/add-to-web3@v2
      id: ipfs
      with:
        path_to_add: ${{ inputs.path_to_add }}
        web3_token: ${{ inputs.web3_token }}

    - name: Update IPFS DNSLink
      if: inputs.dnslink_domain != '' && github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: npx dnslink-cloudflare --record ${{ inputs.dnslink_record }} --domain ${{ inputs.dnslink_domain }} --link /ipfs/${{ steps.ipfs.outputs.cid }}
      shell: bash
      env:
        CF_API_TOKEN: ${{ inputs.cf_token }}

    - name: Deploy preview build to Cloudflare Pages
      uses: mathiasvr/command-output@v1.1.0
      id: cloudflare
      with:
        run: npx wrangler pages publish --project-name ${{ inputs.cf_pages_project }} --branch "$GITHUB_REF_NAME" --commit-hash "$GITHUB_SHA" ${{ inputs.path_to_add }}
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cf_token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cf_account_id }}

    - name: Find Cloudflare Pages preview URL
      uses: mathiasvr/command-output@v1.1.0
      id: cloudflare_url
      with:
        run: egrep -o 'https?://[^ ]+' <(echo "${{ steps.cloudflare.outputs.stdout }}")

    - name: Set Job Summary
      uses: actions/github-script@v5
      id: set_summary
      with:
        script: |
          core.setOutput('summary', `### Website preview 🔗✨
          - 🙂 https://w3s.link/ipfs/${{ steps.ipfs.outputs.cid }}
          - ⛅️ ${{ steps.cloudflare_url.outputs.stdout }}`)
